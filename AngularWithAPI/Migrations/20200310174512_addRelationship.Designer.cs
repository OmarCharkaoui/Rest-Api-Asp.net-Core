// <auto-generated />
using System;
using AngularWithAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AngularWithAPI.Migrations
{
    [DbContext(typeof(EfDbContext))]
    [Migration("20200310174512_addRelationship")]
    partial class addRelationship
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AngularWithAPI.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<int?>("PersoneId");

                    b.HasKey("Id");

                    b.HasIndex("PersoneId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("AngularWithAPI.Models.Persone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Persones");
                });

            modelBuilder.Entity("AngularWithAPI.Models.Contact", b =>
                {
                    b.HasOne("AngularWithAPI.Models.Persone")
                        .WithMany("Contacts")
                        .HasForeignKey("PersoneId");
                });
#pragma warning restore 612, 618
        }
    }
}
